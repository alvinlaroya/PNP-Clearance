"use strict";

var querystring = require("querystring");

exports.createPathWithQuery = function (path, query) {
  if (!query) {
    throw new Error('"query" is a required parameter');
  }

  var pathExt = "";

  if (typeof query === "string") {
    // single call Id
    pathExt = "/".concat(query);
  } else if (typeof query === "object" && Object.keys(query).length > 0) {
    // filter
    pathExt = "?".concat(querystring.stringify(query));
  }

  return "".concat(path).concat(pathExt);
};

exports.sendError = function (callback, err, returnData) {
  // Throw the error in case if there is no callback passed
  if (callback) {
    callback(err, returnData);
  } else {
    throw err;
  }
};

exports.clone = function (a) {
  return JSON.parse(JSON.stringify(a));
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9VdGlscy5qcyJdLCJuYW1lcyI6WyJxdWVyeXN0cmluZyIsInJlcXVpcmUiLCJleHBvcnRzIiwiY3JlYXRlUGF0aFdpdGhRdWVyeSIsInBhdGgiLCJxdWVyeSIsIkVycm9yIiwicGF0aEV4dCIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJzdHJpbmdpZnkiLCJzZW5kRXJyb3IiLCJjYWxsYmFjayIsImVyciIsInJldHVybkRhdGEiLCJjbG9uZSIsImEiLCJKU09OIiwicGFyc2UiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsV0FBVyxHQUFHQyxPQUFPLENBQUMsYUFBRCxDQUF6Qjs7QUFFQUMsT0FBTyxDQUFDQyxtQkFBUixHQUE4QixVQUFVQyxJQUFWLEVBQWdCQyxLQUFoQixFQUF1QjtBQUNuRCxNQUFJLENBQUNBLEtBQUwsRUFBWTtBQUNWLFVBQU0sSUFBSUMsS0FBSixDQUFVLGlDQUFWLENBQU47QUFDRDs7QUFFRCxNQUFJQyxPQUFPLEdBQUcsRUFBZDs7QUFDQSxNQUFJLE9BQU9GLEtBQVAsS0FBaUIsUUFBckIsRUFBK0I7QUFDN0I7QUFDQUUsSUFBQUEsT0FBTyxjQUFPRixLQUFQLENBQVA7QUFDRCxHQUhELE1BR08sSUFBSSxPQUFPQSxLQUFQLEtBQWlCLFFBQWpCLElBQTZCRyxNQUFNLENBQUNDLElBQVAsQ0FBWUosS0FBWixFQUFtQkssTUFBbkIsR0FBNEIsQ0FBN0QsRUFBZ0U7QUFDckU7QUFDQUgsSUFBQUEsT0FBTyxjQUFPUCxXQUFXLENBQUNXLFNBQVosQ0FBc0JOLEtBQXRCLENBQVAsQ0FBUDtBQUNEOztBQUVELG1CQUFVRCxJQUFWLFNBQWlCRyxPQUFqQjtBQUNELENBZkQ7O0FBaUJBTCxPQUFPLENBQUNVLFNBQVIsR0FBb0IsVUFBVUMsUUFBVixFQUFvQkMsR0FBcEIsRUFBeUJDLFVBQXpCLEVBQXFDO0FBQ3ZEO0FBQ0EsTUFBSUYsUUFBSixFQUFjO0FBQ1pBLElBQUFBLFFBQVEsQ0FBQ0MsR0FBRCxFQUFNQyxVQUFOLENBQVI7QUFDRCxHQUZELE1BRU87QUFDTCxVQUFNRCxHQUFOO0FBQ0Q7QUFDRixDQVBEOztBQVNBWixPQUFPLENBQUNjLEtBQVIsR0FBZ0IsVUFBVUMsQ0FBVixFQUFhO0FBQzNCLFNBQU9DLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNQLFNBQUwsQ0FBZU0sQ0FBZixDQUFYLENBQVA7QUFDRCxDQUZEIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHF1ZXJ5c3RyaW5nID0gcmVxdWlyZShcInF1ZXJ5c3RyaW5nXCIpO1xuXG5leHBvcnRzLmNyZWF0ZVBhdGhXaXRoUXVlcnkgPSBmdW5jdGlvbiAocGF0aCwgcXVlcnkpIHtcbiAgaWYgKCFxdWVyeSkge1xuICAgIHRocm93IG5ldyBFcnJvcignXCJxdWVyeVwiIGlzIGEgcmVxdWlyZWQgcGFyYW1ldGVyJyk7XG4gIH1cblxuICB2YXIgcGF0aEV4dCA9IFwiXCI7XG4gIGlmICh0eXBlb2YgcXVlcnkgPT09IFwic3RyaW5nXCIpIHtcbiAgICAvLyBzaW5nbGUgY2FsbCBJZFxuICAgIHBhdGhFeHQgPSBgLyR7cXVlcnl9YDtcbiAgfSBlbHNlIGlmICh0eXBlb2YgcXVlcnkgPT09IFwib2JqZWN0XCIgJiYgT2JqZWN0LmtleXMocXVlcnkpLmxlbmd0aCA+IDApIHtcbiAgICAvLyBmaWx0ZXJcbiAgICBwYXRoRXh0ID0gYD8ke3F1ZXJ5c3RyaW5nLnN0cmluZ2lmeShxdWVyeSl9YDtcbiAgfVxuXG4gIHJldHVybiBgJHtwYXRofSR7cGF0aEV4dH1gO1xufTtcblxuZXhwb3J0cy5zZW5kRXJyb3IgPSBmdW5jdGlvbiAoY2FsbGJhY2ssIGVyciwgcmV0dXJuRGF0YSkge1xuICAvLyBUaHJvdyB0aGUgZXJyb3IgaW4gY2FzZSBpZiB0aGVyZSBpcyBubyBjYWxsYmFjayBwYXNzZWRcbiAgaWYgKGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soZXJyLCByZXR1cm5EYXRhKTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBlcnI7XG4gIH1cbn07XG5cbmV4cG9ydHMuY2xvbmUgPSBmdW5jdGlvbiAoYSkge1xuICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShhKSk7XG59O1xuIl19